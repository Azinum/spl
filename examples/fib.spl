// fib.spl

fn fib(u64 n) {
  let a 0;
  let b 1;
  let c 0;
  let i 1;
  if eq n 0 {
    = @b 0;
  }
  else {
    while < i n {
      = @c + a b;
      = @a b;
      = @b c;
      = @i +1 i;
    }
  }
  b;
}

fn fib_recursive(u64 n) {
  let result 0;
  if < n 2 {
    = @result n;
  }
  else {
    = @result + fib_recursive(- n 1) fib_recursive(- n 2);
  }
  result;
}

fn main {
  let n 12;
  print fib_recursive(n);
  print fib(n);
}
